{"version":3,"sources":["Components/SVGLink.js","Components/Landing.js","Components/HeaderLink.js","Components/Header.js","Components/AboutMe.js","Components/SkillSummary.js","Components/WebSites.js","Components/Games.js","Components/EcoStore.js","Components/WorkExperience.js","Components/CodingExperience.js","App.js","serviceWorker.js","index.js"],"names":["SVGLink","href","this","props","Link","target","rel","className","style","width","height","display","viewBox","fill","d","Path","React","Component","Landing","id","src","alt","HeaderLink","Href","Colour","Name","OnLinkClick","basename","onClick","to","value","Header","pages","name","updateDimensions","setState","prev","Collapsed","window","screen","SmallScreen","OnMenuIconClick","OnMenuCloseClick","OnSmallLinkClick","addEventListener","removeEventListener","state","map","page","key","AboutMe","photos","fetch","then","res","json","data","length","book","currentBook","currentAuthor","authors","author","catch","console","log","LandingColour","BackgroundColour","title_without_series","color","marginLeft","marginBottom","SkillSummary","sleep","ms","Promise","resolve","setTimeout","languages","libraries","databases","python","javascript","cLanguages","cSharp","printLanguages","Command","Output","CommandText","Typing","Printing","printSkillSummary","onClickLanguages","onFinishedTyping","startTyping","onClickSkillSummary","onStartedTyping","WebProjects","url","content","WebSites","CurrentSite","ToggleLeft","newIndex","indexOf","ToggleRight","unityContent","UnityContent","Games","Images","EcoStore","Image","colSpan","paddingBottom","fontSize","WorkExperience","OnTileClick","event","Tile1Expanded","Tile2Expanded","CodingExperience","Color","BackgroundColor","App","HeadingColour","PictureURL","PageIndex","history","createBrowserHistory","ReactGA","initialize","set","listen","location","hash","pageview","ColourChange","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7e8627c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class SVGLink extends React.Component {\r\n  render() {\r\n    return (\r\n      <a\r\n        href={this.props.Link}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"svgLink\"\r\n      >\r\n        <svg\r\n          style={{ width: \"24px\", height: \"24px\", display: \"inline\" }}\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path fill=\"currentColour\" d={this.props.Path} />\r\n        </svg>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SVGLink from \"./SVGLink\";\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"landingPage\">\r\n        <div id=\"landingWrapper\">\r\n          <div id=\"landingPhotoDiv\">\r\n            <img src=\"Images/landing_blush.png\" alt=\"\" id=\"landingPhoto\" />\r\n          </div>\r\n          <div id=\"landingTextDiv\">\r\n            <span>\r\n              hello world!\r\n              <br />\r\n              my name is Grace :)\r\n              <br />\r\n              <br />\r\n              let's get to know eachother!\r\n              <br />\r\n              <br />\r\n              <SVGLink\r\n                Link=\"https://www.github.com/gracekang2\"\r\n                Path=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"\r\n              />\r\n              <SVGLink\r\n                Link=\"https://www.linkedin.com/in/g8kang\"\r\n                Path=\"M19 3A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V5A2 2 0 0 1 5 3H19M18.5 18.5V13.2A3.26 3.26 0 0 0 15.24 9.94C14.39 9.94 13.4 10.46 12.92 11.24V10.13H10.13V18.5H12.92V13.57C12.92 12.8 13.54 12.17 14.31 12.17A1.4 1.4 0 0 1 15.71 13.57V18.5H18.5M6.88 8.56A1.68 1.68 0 0 0 8.56 6.88C8.56 5.95 7.81 5.19 6.88 5.19A1.69 1.69 0 0 0 5.19 6.88C5.19 7.81 5.95 8.56 6.88 8.56M8.27 18.5V10.13H5.5V18.5H8.27Z\"\r\n              />\r\n              <SVGLink\r\n                Link=\"mailto:g8kang@uwaterloo.ca\"\r\n                Path=\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\"\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\n\r\nexport const HeaderLink = ({ Href, Colour, Name, OnLinkClick }) => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <div className=\"headerLink\" onClick={OnLinkClick}>\r\n        <Link to={Href}>\r\n          <span className={Colour} value={Href}>\r\n            {Name}\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HeaderLink } from \"./HeaderLink\";\r\n\r\nexport default class Header extends React.Component {\r\n  pages = [\r\n    {\r\n      name: \"home\",\r\n      href: \"/\",\r\n    },\r\n    {\r\n      name: \"about me\",\r\n      href: \"/about\",\r\n    },\r\n    {\r\n      name: \"skills\",\r\n      href: \"/skills\",\r\n    },\r\n    {\r\n      name: \"coding\",\r\n      href: \"/code\",\r\n    },\r\n  ];\r\n\r\n  updateDimensions = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: window.screen.width <= 450,\r\n      SmallScreen: window.screen.width <= 450,\r\n    }));\r\n  };\r\n\r\n  OnMenuIconClick = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: false,\r\n    }));\r\n  };\r\n\r\n  OnMenuCloseClick = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: true,\r\n    }));\r\n  };\r\n\r\n  OnSmallLinkClick = (value) => {\r\n    this.OnMenuCloseClick();\r\n    this.props.OnLinkClick(value);\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.updateDimensions();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"header\">\r\n        <svg\r\n          id=\"menuIcon\"\r\n          style={{\r\n            width: \"24px\",\r\n            height: \"24px\",\r\n            display: this.state.Collapsed ? \"inline-block\" : \"none\",\r\n          }}\r\n          viewBox=\"0 0 24 24\"\r\n          onClick={this.OnMenuIconClick}\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\"\r\n          />\r\n        </svg>\r\n        <div\r\n          className=\"linkWrapper\"\r\n          style={{ display: !this.state.Collapsed ? \"inline-block\" : \"none\" }}\r\n        >\r\n          <svg\r\n            style={{\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              display:\r\n                this.state.SmallScreen && !this.state.Collapsed\r\n                  ? \"inline-block\"\r\n                  : \"none\",\r\n            }}\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"menuClose\"\r\n            onClick={this.OnMenuCloseClick}\r\n          >\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\r\n            />\r\n          </svg>\r\n          <br />\r\n          {this.pages.map((page) => {\r\n            return (\r\n              <HeaderLink\r\n                key={[page.href]}\r\n                Href={page.href}\r\n                Colour={this.props.Colour}\r\n                Name={page.name}\r\n                OnLinkClick={\r\n                  this.state.SmallScreen\r\n                    ? this.OnSmallLinkClick\r\n                    : this.props.OnLinkClick\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Gallery from \"react-photo-gallery\";\r\n\r\nexport default class AboutMe extends React.Component {\r\n  photos = [\r\n    {\r\n      src: \"./AboutMeImages/15.jpg\",\r\n      width: 3,\r\n      height: 4.5,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/14.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/12.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/3.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/4.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/11.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/5.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/7.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/8.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/9.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/6.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/10.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/2.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/13.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n    {\r\n      src: \"./AboutMeImages/1.jpg\",\r\n      width: 3,\r\n      height: 4,\r\n    },\r\n  ];\r\n\r\n  componentWillMount() {\r\n    fetch(\"https://currently-reads.now.sh/reading/114484403/json\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (\r\n          data &&\r\n          data.length &&\r\n          data[0] &&\r\n          data[0].book &&\r\n          data[0].book.length\r\n        ) {\r\n          this.setState({\r\n            currentBook: data[0].book[0],\r\n            currentAuthor:\r\n              data[0].book[0].authors.length &&\r\n              data[0].book[0].authors[0].author.length &&\r\n              data[0].book[0].authors[0].author[0].name[0],\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"aboutMe\">\r\n        <h1 className={this.props.LandingColour}>about me</h1>\r\n        <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n          Name:\r\n        </span>\r\n        <span className=\"aboutMeAns\">Grace Kang 🤠</span>\r\n        <br />\r\n        <br />\r\n        <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n          Program:\r\n        </span>\r\n        <span className=\"aboutMeAns\">\r\n          2B Computer Science, University of Waterloo 🦆\r\n        </span>\r\n        <br />\r\n        <br />\r\n        <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n          Hometown:\r\n        </span>\r\n        <span className=\"aboutMeAns\">Toronto, Canada 🍁</span>\r\n        {this.state.currentBook ? (\r\n          <>\r\n            <br />\r\n            <br />\r\n            <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n              Currently Reading... 💭\r\n            </span>\r\n            <span className=\"aboutMeAns\">\r\n              {this.state.currentBook.title_without_series},{\" \"}\r\n              {this.state.currentAuthor}\r\n              <a\r\n                href=\"https://www.goodreads.com/user/show/114484403-grace\"\r\n                target=\"_blank\"\r\n                style={{ color: \"#551A8B\" }}\r\n              >\r\n                <svg\r\n                  style={{\r\n                    width: \"24px\",\r\n                    height: \"24px\",\r\n                    marginLeft: \"6px\",\r\n                    marginBottom: \"-5px\",\r\n                  }}\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\r\n                  />\r\n                </svg>\r\n              </a>\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <br/>\r\n            <br/>\r\n            <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n              Currently Reading... 💭\r\n            </span>\r\n            <span className=\"aboutMeAns\">\r\n              {\" \"}\r\n              {\" \"}\r\n              <a\r\n                href=\"https://www.goodreads.com/user/show/114484403-grace\"\r\n                target=\"_blank\"\r\n                style={{ color: \"#551A8B\" }}\r\n              >\r\n                <svg\r\n                  style={{\r\n                    width: \"24px\",\r\n                    height: \"24px\",\r\n                    marginLeft: \"6px\",\r\n                    marginBottom: \"-5px\",\r\n                  }}\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\"\r\n                  />\r\n                </svg>\r\n              </a>\r\n            </span>\r\n          </>\r\n        )}\r\n        <br />\r\n        <br />\r\n        <hr />\r\n        <div id=\"aboutMeDesc\">\r\n          <p>\r\n            Welcome to my website 😺! My name is\r\n            <b className={this.props.LandingColour}> Grace </b>\r\n            and I'm a second year{\" \"}\r\n            <b className={this.props.LandingColour}>Computer Science</b> student\r\n            at the{\" \"}\r\n            <b className={this.props.LandingColour}>University of Waterloo.</b>\r\n            <br />\r\n            <br />\r\n            Speaking in terms of my technical interests -- while most of my\r\n            experience is in full-stack software engineering, I'm mostly\r\n            interested in backend development! I would love any opportunity to\r\n            grow my skillset in that area of Computer Science. For more\r\n            information about my skillset or past technical experiences, you can\r\n            head over to my skills summary or my coding experience section.\r\n            <br />\r\n            <b>\r\n              I am currently looking for an internship opportunity for{\" \"}\r\n              <b>\r\n                <span className={this.props.LandingColour}> Winter 2021</span>\r\n              </b>\r\n              , so I would love to chat!\r\n            </b>\r\n            <br />\r\n            <br />\r\n            Let me also tell you a little more about me! Here are a few of my\r\n            favourites...\r\n            <br />\r\n          </p>\r\n          <ol>\r\n            <li>\r\n              <b className={this.props.LandingColour}>book - </b> Kafka on the\r\n              Shore by Haruki Murakami\r\n            </li>\r\n            <li>\r\n              <b className={this.props.LandingColour}>movie - </b> A Beautiful\r\n              Mind\r\n            </li>\r\n            <li>\r\n              <b className={this.props.LandingColour}>artists - </b> Daniel\r\n              Caesar, Khalid and Rich Brian\r\n            </li>\r\n          </ol>\r\n          <p>\r\n            I also love to spend time with my loved ones (especially my dog),\r\n            read, and travel! Some of my favourite places that I've visited are\r\n            Quebec City and California, but South Korea is definitely my top\r\n            travel destination for all the delicious street food. If you scroll\r\n            down, you'll find pictures of me and my friends, but also of my dog\r\n            🐶! His name is Teddy and my family adopted him in 2016.\r\n            <br />\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <h1 className={this.props.LandingColour}>some pictures!</h1>\r\n        <Gallery photos={this.photos}></Gallery>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typing from \"react-typing-animation\";\r\n\r\nexport default class SkillSummary extends React.Component {\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  languages = (\r\n    <span>\r\n      <span className=\"greenTxt\">languages: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['python', 'JavaScript', 'C', 'C++', 'C#']\r\n      </span>\r\n    </span>\r\n  );\r\n  libraries = (\r\n    <span>\r\n      <span className=\"greenTxt\">frameworks + libraries: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['reactJS', 'node.js', 'jQuery', 'ASP.NET']\r\n      </span>\r\n      <br />\r\n    </span>\r\n  );\r\n  databases = (\r\n    <span>\r\n      <span className=\"greenTxt\">databases: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['mongoDB', 'Microsoft SQL Management Server']\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  python = (\r\n    <span>\r\n      <span className=\"yellowTxt\">python: </span>\r\n      <span>\r\n        used Python while interning at Wish, as a SWE intern on the Product\r\n        Payments team. Worked on various backend tasks using Python, including\r\n        work on Wish's customer support chatbot, writing scripts / crons, and\r\n        integrating features of Stripe's payment API.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  javascript = (\r\n    <span>\r\n      <span className=\"yellowTxt\">JavaScript: </span>\r\n      <span>\r\n        experience using JavaScript for both frontend and backend tasks - used{\" \"}\r\n        <span className=\"greenTxt\">jQuery</span> during co-op as a full-stack\r\n        developer at Scotiabank, and used{\" \"}\r\n        <span className=\"greenTxt\">React.js </span>\r\n        while interning at Wish. I also used{\" \"}\r\n        <span className=\"greenTxt\">Express/Node.js</span> to build an API for a\r\n        hackathon project called EcoStore.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  cLanguages = (\r\n    <span>\r\n      <span className=\"yellowTxt\">C and C++: </span>\r\n      <span>\r\n        learned both C and C++ in courses at university. Studied C and related\r\n        topics in <span className=\"neonGreen\">CS136 (93%)</span> and C++ in{\" \"}\r\n        <span className=\"neonGreen\">CS246 (95%)</span>. In CS246, the final\r\n        project was a Tetris replica game called BiQuadris that was completed\r\n        with 2 other group members, which received a grade of 98%.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  cSharp = (\r\n    <span>\r\n      <span className=\"yellowTxt\">C#: </span>\r\n      <span>\r\n        gained experience in C# while interning at ScotiaBank as a full-stack\r\n        web developer, and used it to create various web forms and razor pages,\r\n        alongside Microsoft's ASP.NET framework.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  printLanguages = () => {\r\n    this.setState((prev) => ({\r\n      Command: null,\r\n      Output: prev.Output ? (\r\n        <span>\r\n          {prev.Output}\r\n          <br />\r\n          {prev.CommandText}\r\n        </span>\r\n      ) : (\r\n        <span>{prev.CommandText}</span>\r\n      ),\r\n    }));\r\n    this.sleep(1000).then(() => {\r\n      this.setState((prev) => ({\r\n        Output: (\r\n          <span>\r\n            {prev.Output}\r\n            <br />\r\n            {this.python}\r\n          </span>\r\n        ),\r\n        Typing: false,\r\n      }));\r\n      this.sleep(1000).then(() => {\r\n        this.setState((prev) => ({\r\n          Output: (\r\n            <span>\r\n              {prev.Output}\r\n              <br />\r\n              {this.javascript}\r\n            </span>\r\n          ),\r\n        }));\r\n        this.sleep(1000).then(() => {\r\n          this.setState((prev) => ({\r\n            Output: (\r\n              <span>\r\n                {prev.Output}\r\n                <br />\r\n                {this.cLanguages}\r\n              </span>\r\n            ),\r\n          }));\r\n          this.sleep(1000).then(() => {\r\n            this.setState((prev) => ({\r\n              Output: (\r\n                <span>\r\n                  {prev.Output}\r\n                  <br />\r\n                  {this.cSharp}\r\n                  <br />\r\n                  ---------------------------\r\n                </span>\r\n              ),\r\n              Printing: false,\r\n            }));\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  printSkillSummary = () => {\r\n    this.setState((prev) => ({\r\n      Command: null,\r\n      Output: prev.Output ? (\r\n        <span>\r\n          {prev.Output}\r\n          <br />\r\n          {prev.CommandText}\r\n        </span>\r\n      ) : (\r\n        <span>{prev.CommandText}</span>\r\n      ),\r\n    }));\r\n    this.sleep(1000).then(() => {\r\n      this.setState((prev) => ({\r\n        Output: prev.Output ? (\r\n          <span>\r\n            {prev.Output}\r\n            <br />\r\n            {this.languages}\r\n          </span>\r\n        ) : (\r\n          <span>{this.languages}</span>\r\n        ),\r\n        Typing: false,\r\n      }));\r\n      this.sleep(1000).then(() => {\r\n        this.setState((prev) => ({\r\n          Output: (\r\n            <span>\r\n              {prev.Output}\r\n              <br />\r\n              {this.libraries}\r\n            </span>\r\n          ),\r\n        }));\r\n        this.sleep(1000).then(() => {\r\n          this.setState((prev) => ({\r\n            Output: (\r\n              <span>\r\n                {prev.Output}\r\n                {this.databases}\r\n                <br />\r\n                ----------------------------\r\n              </span>\r\n            ),\r\n            Printing: false,\r\n          }));\r\n          this.onClickLanguages();\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  state = {\r\n    Printing: true,\r\n    Typing: true,\r\n    Command: (\r\n      <Typing className=\"command\" onFinishedTyping={this.printSkillSummary}>\r\n        {\" \"}\r\n        python skill_summary.py{\" \"}\r\n      </Typing>\r\n    ),\r\n    Output: null,\r\n    CommandText: \"python skill_summary.py\",\r\n  };\r\n\r\n  startTyping = () => {\r\n    this.setState((prev) => ({\r\n      Typing: true,\r\n    }));\r\n  };\r\n\r\n  onClickSkillSummary = () => {\r\n    this.setState((prev) => ({\r\n      Command: (\r\n        <Typing\r\n          className=\"command\"\r\n          onStartedTyping={this.startTyping}\r\n          onFinishedTyping={this.printSkillSummary}\r\n        >\r\n          {\" \"}\r\n          python skill_summary.py{\" \"}\r\n        </Typing>\r\n      ),\r\n      CommandText: \"python skill_summary.py\",\r\n      Printing: true,\r\n    }));\r\n  };\r\n\r\n  onClickLanguages = () => {\r\n    this.setState((prev) => ({\r\n      Command: (\r\n        <Typing\r\n          className=\"command\"\r\n          onStartedTyping={this.startTyping}\r\n          onFinishedTyping={this.printLanguages}\r\n        >\r\n          {\" \"}\r\n          python languages.py{\" \"}\r\n        </Typing>\r\n      ),\r\n      CommandText: \"python languages.py\",\r\n      Printing: true,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"skillSummary\">\r\n        <h1 className={this.props.LandingColour}>skills summary</h1>\r\n        <h4>\r\n          <span className={this.props.LandingColour}>\r\n            Don't have a lot of time?\r\n          </span>{\" \"}\r\n          Click{\" \"}\r\n          <a\r\n            href=\"https://drive.google.com/file/d/18CtcQ9Z35Ya7hSWmn1f7T67En6pBSXjy/view\"\r\n            target=\"_blank\"\r\n            style={{ color: \"#551A8B\" }}\r\n          >\r\n            here\r\n          </a>{\" \"}\r\n          to see my resume.\r\n        </h4>\r\n        <p>\r\n          For more detailed info, check out my coding experience section.\r\n        </p>\r\n        <div id=\"terminal\">\r\n          <div id=\"terminalHeader\">\r\n            <div id=\"redBtn\" className=\"terminalBtn\"></div>\r\n            <div id=\"yellowBtn\" className=\"terminalBtn\"></div>\r\n            <div id=\"greenBtn\" className=\"terminalBtn\"></div>\r\n          </div>\r\n          <div id=\"terminalText\">\r\n            <div id=\"loginText\">\r\n              <span className=\"terminalWhite\">\r\n                Last login: Sat Feb 22 23:43:02 on console\r\n              </span>\r\n            </div>\r\n            <div id=\"outputtedText\" className=\"terminalWhite\">\r\n              {this.state.Output}\r\n            </div>\r\n            <div id=\"commandText\">\r\n              <span className=\"terminalWhite\">\r\n                <span className=\"neonGreen\">gkang-mac: </span>\r\n                <span className=\"neonPink\">~desktop$ </span>\r\n                {this.state.Command}\r\n              </span>\r\n              {!this.state.Typing ? (\r\n                <span id=\"cursor\">&nbsp;&nbsp;</span>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst WebProjects = [\r\n  {\r\n    url: \"localhost:5000\",\r\n    content: (\r\n      <div>\r\n        <h3>MyBCP</h3>\r\n        <h5>ASP.NET Web Form, C#, SQL, JavaScript/jQuery, CSS, HTML</h5>\r\n        <p>\r\n          This was one of the <b>flagship</b> projects that I created while\r\n          working at Scotiabank as a Technology Analyst Co-op. MyBCP (BCP\r\n          meaning Business Continuity Plan for employees) is a site that\r\n          displays a customized, summarized and easily digestible view of an\r\n          employee's BCP (either detected through Windows Cookie Authenticaion\r\n          or query string). <br />\r\n          The page also supports editing capabilities for contact information,\r\n          is extremely <b>mobile-friendly</b>, and can render the summarized BCP\r\n          in <b>HTML, PDF or HTML email</b> (optimized for Outlook 2007). <br />\r\n          MyBCP greatly modernizes Scotiabank's existing BCP system, and it is\r\n          estimated that gradually, upwards of\r\n          <b> 2000 Toronto employees</b> will be using the page.\r\n        </p>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    url: \"localhost:3000\",\r\n    content: (\r\n      <div>\r\n        <h3>Fund Import Site</h3>\r\n        <h5>ASP.NET Web Form, C#, jQuery, SQL, HTML, CSS</h5>\r\n        <p>\r\n          Essentially, this site was a tool that would automate tedious manual\r\n          fund tracking. It ingests multiple spreadsheets with enormous amounts\r\n          of fund data <b>(~120 000+ rows)</b>, processes them, and makes the\r\n          necessary updates to the bank's database.\r\n          <br />\r\n          It was built to be very quick - the entire process takes{\" \"}\r\n          <b>less than 10s</b> for around a dozen files. The site was also built\r\n          to be incredibly user friendly, with a drag and drop file upload\r\n          mechanism, and a calendar displaying all the updates and inserts made\r\n          on each day.\r\n        </p>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    url: \"localhost:8000\",\r\n    content: (\r\n      <div>\r\n        <h3>Bulk Editors</h3>\r\n        <h5>ASP.NET Razor Pages + Web APIs, C#, SQL, jQuery, HTML, CSS</h5>\r\n        <p>\r\n          While working at Scotiabank as a co-op student, I also built two\r\n          separate web tools to help speed up the editing of data. <br /> Both\r\n          of the pages were <b>bulk editors</b> for very large data tables that\r\n          supported adding, editing and deleting capabilities, with user\r\n          friendly interfaces. (One page was for editing approved hotel data,\r\n          and another was for employee data). The approved hotels editor page\r\n          also supported the restoration of previously deleted rates and hotels.\r\n          <b />\r\n          The most essential part of these pages was to keep them efficient\r\n          despite their large amounts of data, particularly for older browsers\r\n          still used within the bank.\r\n        </p>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    url: \"localhost:4000\",\r\n    content: (\r\n      <div>\r\n        <h3>UserMatrix - JS Library</h3>\r\n        <h5>JavaScript/jQuery, SQL, C# Web Methods, Microsoft Access</h5>\r\n        <p>\r\n          This is also a project that I made while I worked at Scotiabank,\r\n          unofficially titled UserMatrix. It is essentialally a{\" \"}\r\n          <b>JavaScript library</b>, with minimal dependencies, for use in other\r\n          webpages within ScotiaBank (for example, I used it in one of my bulk\r\n          editors). The JS library essentially generates highly customizable,{\" \"}\r\n          <b>2-dimensional</b> batch edit modals to edit Users against another\r\n          dimension (e.g. applications).\r\n          <br />\r\n          The modal was designed to be efficient, and be customizable for the\r\n          types of users, the dimension against which users would be edited,\r\n          adding capabilities, etc. <br />\r\n          The UserMatrix JS library is to be used in multiple present and future\r\n          internal Scotiabank webpages.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n];\r\n\r\nexport default class WebSites extends React.Component {\r\n  state = {\r\n    CurrentSite: WebProjects[0]\r\n  };\r\n\r\n  ToggleLeft = () => {\r\n    var newIndex = WebProjects.indexOf(this.state.CurrentSite);\r\n    newIndex -= 1;\r\n\r\n    if (newIndex < 0) {\r\n      newIndex = WebProjects.length - 1;\r\n    }\r\n\r\n    this.setState(prev => ({\r\n      CurrentSite: WebProjects[newIndex]\r\n    }));\r\n  };\r\n\r\n  ToggleRight = () => {\r\n    var newIndex = WebProjects.indexOf(this.state.CurrentSite);\r\n    newIndex += 1;\r\n\r\n    if (newIndex >= WebProjects.length) {\r\n      newIndex = 0;\r\n    }\r\n\r\n    this.setState(prev => ({\r\n      CurrentSite: WebProjects[newIndex]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sitewrap\">\r\n        <div id=\"webprojs\">\r\n          <div id=\"webNav\">\r\n            <span id=\"webBtns\">\r\n              <svg\r\n                style={{ width: \"16px\", height: \"16px\" }}\r\n                viewBox=\"0 0 24 24\"\r\n                id=\"webleftbtn\"\r\n                onClick={this.ToggleLeft}\r\n              >\r\n                <path\r\n                  fill=\"#000000\"\r\n                  d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                />\r\n              </svg>\r\n              <svg\r\n                style={{ width: \"16px\", height: \"16px\" }}\r\n                viewBox=\"0 0 24 24\"\r\n                id=\"webrightbtn\"\r\n                onClick={this.ToggleRight}\r\n              >\r\n                <path\r\n                  fill=\"#000000\"\r\n                  d=\"M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z\"\r\n                />\r\n              </svg>\r\n            </span>\r\n            <span id=\"webURL\">{this.state.CurrentSite.url}</span>\r\n          </div>\r\n          <div id=\"webContent\">{this.state.CurrentSite.content}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\n\r\nconst unityContent = new UnityContent(\r\n  \"CoinRun/CoinRun.json\",\r\n  \"CoinRun/UnityLoader.js\"\r\n);\r\n\r\nexport default class Games extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"games\">\r\n        <Unity unityContent={unityContent} height=\"10px\" width=\"10px\" />\r\n        <p>\r\n          <b>Note:</b> I don't take credit for this project! I followed a\r\n          tutorial to make this at the end of my first year of university.\r\n          <br />\r\n          <br />\r\n          Even though I didn't make this independently, it was a great learning\r\n          experience nonetheless -- so it's here as a legacy project. It was\r\n          also just really fun for me to make 😊. This is a platform adventure\r\n          game that makes use of Unity's 2D Game Engine.\r\n          <br />\r\n          <br />\r\n          If you want to give it a try, just press 'New Game' and use the arrows\r\n          on the keyboard to move, and your space bar to jump. <br />\r\n          (P.S: If you want to enter a new level, stand in front of the door and\r\n          jump.)\r\n          <br />\r\n          <br />\r\n          <i>\r\n            (P.S. You won't be able to play this on mobile due to WebGL\r\n            limitations!)\r\n          </i>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Images = [\r\n  \"./Images/IMG_0248.PNG\",\r\n  \"./Images/IMG_0249.PNG\",\r\n  \"./Images/IMG_0254.PNG\",\r\n  \"./Images/IMG_0255.PNG\",\r\n  \"./Images/IMG_0256.PNG\",\r\n  \"./Images/IMG_0257.PNG\",\r\n  \"./Images/IMG_0259.PNG\",\r\n  \"./Images/IMG_0260.PNG\",\r\n  \"./Images/IMG_0258.PNG\",\r\n];\r\n\r\nexport default class EcoStore extends React.Component {\r\n  state = {\r\n    Image: Images[0],\r\n  };\r\n\r\n  ToggleLeft = () => {\r\n    var newIndex = Images.indexOf(this.state.Image);\r\n    newIndex -= 1;\r\n\r\n    if (newIndex < 0) {\r\n      newIndex = Images.length - 1;\r\n    }\r\n\r\n    this.setState((prev) => ({\r\n      Image: Images[newIndex],\r\n    }));\r\n  };\r\n\r\n  ToggleRight = () => {\r\n    var newIndex = Images.indexOf(this.state.Image);\r\n    newIndex += 1;\r\n\r\n    if (newIndex >= Images.length) {\r\n      newIndex = 0;\r\n    }\r\n\r\n    this.setState((prev) => ({\r\n      Image: Images[newIndex],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table id=\"ecostore\">\r\n          <tbody>\r\n            <tr>\r\n              <td\r\n                colSpan={3}\r\n                style={{ paddingBottom: \"20px\", fontSize: \"16px\" }}\r\n              >\r\n                <i>Swift, Node.js + Express.js, MongoDB, Microsoft Azure</i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td onClick={this.ToggleLeft} className=\"ecostoreArrow\">\r\n                <svg\r\n                  style={{ width: \"24px\", height: \"24px\" }}\r\n                  viewBox=\"0 0 24 24\"\r\n                  className=\"leftbtn\"\r\n                >\r\n                  <path\r\n                    fill=\"#000000\"\r\n                    d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                  />\r\n                </svg>\r\n              </td>\r\n              <td id=\"ecostoreimg\">\r\n                <img src={this.state.Image} alt=\"Screenshot of ecostore app\" />\r\n              </td>\r\n              <td onClick={this.ToggleRight} className=\"ecostoreArrow\">\r\n                <svg\r\n                  style={{ width: \"24px\", height: \"24px\" }}\r\n                  viewBox=\"0 0 24 24\"\r\n                  className=\"rightbtn\"\r\n                >\r\n                  <path\r\n                    fill=\"#000000\"\r\n                    d=\"M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z\"\r\n                  />\r\n                </svg>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"ecostoredesc\" colSpan={3}>\r\n                <br />\r\n                EcoStore is an adorable iOS application that was created at Hack\r\n                the North in September 2019.\r\n                <br />\r\n                This application is based off the very real issue of{\" \"}\r\n                <i>recycling contamination</i>, where one piece of trash in a\r\n                huge batch of recycling is enough to send all of the recycling\r\n                to the landfill! <br />\r\n                EcoStore works to encourage users to recycle properly, rather\r\n                than recklessly. The app uses an image recognition model,\r\n                trained using <b>Microsoft Azure</b>, with a 95% accuracy rate,\r\n                and allows a user to point their camera at an object and\r\n                determine whether it's recyclable. <br />\r\n                More so, users can track their recycling and are awarded points\r\n                each time they recycle! When a certain point quota is met, users\r\n                can \"restore\" endangered species within the app to reward them\r\n                for their job well done.\r\n                <br />\r\n                Personally, I mainly worked on the backend of this project and\r\n                built out the API using <b>Express/Node.js</b>.\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class WorkExperience extends React.Component {\r\n  OnTileClick = (event) => {\r\n    if (\r\n      event.target.id === \"workTile1\" ||\r\n      event.target.className === \"workTile1\"\r\n    ) {\r\n      this.setState((prev) => ({\r\n        Tile1Expanded: !prev.Tile1Expanded,\r\n        Tile2Expanded: false,\r\n      }));\r\n    } else if (\r\n      event.target.id === \"workTile2\" ||\r\n      event.target.className === \"workTile2\"\r\n    ) {\r\n      this.setState((prev) => ({\r\n        Tile2Expanded: !prev.Tile2Expanded,\r\n        Tile1Expanded: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  state = {\r\n    Tile1Expanded: false,\r\n    Tile2Expanded: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"workTilesWrapper\">\r\n        <div\r\n          id=\"workTile1\"\r\n          className={this.state.Tile1Expanded ? \"expanded\" : \"\"}\r\n          onClick={this.OnTileClick}\r\n        >\r\n          <span className=\"workTitle workTile1\">Wish</span>\r\n          <br />\r\n          <span className=\"workCaption workTile1\">\r\n            Software Engineering Intern\r\n          </span>\r\n          {this.state.Tile1Expanded ? (\r\n            <>\r\n              <br className=\"workTile1\" />\r\n              <i className=\"workTile1\">\r\n                Winter 2020 - San Francisco, California\r\n              </i>\r\n              <p className=\"workTile1\">\r\n                I worked as a full-stack developer on the Product Payments team\r\n                at Wish, primarily using Python and React.js. I worked on a\r\n                variety of different payment and risk related tasks, some\r\n                examples including:\r\n              </p>\r\n              <ul className=\"workTile1\">\r\n                <li className=\"workTile1\">\r\n                  Integrating with the Stripe API to implement a CVV\r\n                  recollection flow\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Building out a chargeback pipeline for PrimeiroPay\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Adding support for shipping only refunds, through Wish's\r\n                  chatbot, for GB, EU and CA.\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Implementing various pre-auth and post-auth risk rules\r\n                </li>\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        <div\r\n          id=\"workTile2\"\r\n          className={this.state.Tile2Expanded ? \"expanded\" : \"\"}\r\n          onClick={this.OnTileClick}\r\n        >\r\n          <span className=\"workTitle workTile2\">Scotiabank</span>\r\n          <br />\r\n          <span className=\"workCaption workTile2\">\r\n            Full Stack Web Developer\r\n          </span>\r\n          {this.state.Tile2Expanded ? (\r\n            <>\r\n              <br className=\"workTile2\" />\r\n              <i className=\"workTile2\">Summer 2019 - Toronto, Canada</i>\r\n              <p className=\"workTile2\">\r\n                I worked as a full-stack web developer on the GBM Web team, and\r\n                created various web services for the trade floor. I used a\r\n                Microsoft stack - ASP.NET, C#, SQL, and jQuery, and took full\r\n                ownership over the development of multiple internal tools.\r\n                <br />\r\n                <br/>\r\n                For more information about these projects, please see the Web\r\n                Projects section below!\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport WebSites from \"./WebSites\";\r\nimport Games from \"./Games\";\r\nimport EcoStore from \"./EcoStore\";\r\nimport WorkExperience from \"./WorkExperience\";\r\n\r\nexport default class CodingExperience extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"codingExperience\">\r\n        <h1 className={this.props.LandingColour}>coding experience</h1>\r\n        <h2 className={this.props.LandingColour}>work experience</h2>\r\n        <WorkExperience\r\n          Color={this.props.LandingColour}\r\n          BackgroundColor={this.props.BackgroundColor}\r\n        />\r\n        <h2 className={this.props.LandingColour}>web projects</h2>\r\n        Use the <b>left and right arrows</b> to read about some of the web tools that I\r\n        created while working as a full stack developer at Scotiabank!\r\n        <br />\r\n        <br />\r\n        <WebSites />\r\n        <h2 className={this.props.LandingColour}>eco-store</h2>\r\n        <EcoStore />\r\n        <h2 className={this.props.LandingColour}>coin run</h2>\r\n        <Games />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./Styles/App.css\";\nimport \"./Styles/Landing.css\";\nimport \"./Styles/AboutMe.css\";\nimport \"./Styles/Skills.css\";\nimport \"./Styles/Header.css\";\nimport \"./Styles/Coding.css\";\nimport Landing from \"./Components/Landing.js\";\nimport Header from \"./Components/Header\";\nimport AboutMe from \"./Components/AboutMe\";\nimport SkillSummary from \"./Components/SkillSummary\";\nimport CodingExperience from \"./Components/CodingExperience\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ReactGA from \"react-ga\";\n\nexport default class App extends React.Component {\n  state = {\n    HeadingColour: \"headingColour1\",\n    BackgroundColour: \"backgroundColour1\",\n    PictureURL: \"Images/bitmoji_transparent_1.png\",\n    PageIndex: \"1\",\n  };\n\n  history = createBrowserHistory();\n\n  componentDidMount() {\n    ReactGA.initialize(\"UA-148594222-1\");\n    ReactGA.set({});\n    this.history.listen((location) => {\n      ReactGA.set({ page: location.hash });\n      ReactGA.pageview(location.hash);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header\n          ColourChange={this.ColourChange}\n          BackgroundColour={this.state.BackgroundColour}\n          Colour={this.state.HeadingColour}\n          OnLinkClick={this.OnLinkClick}\n        ></Header>\n        <div className=\"content\">\n          <HashRouter basename=\"/\" history={this.history}>\n            <Route exact path=\"/\" component={Landing} />\n            <Route\n              path=\"/about\"\n              render={(props) => (\n                <AboutMe\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n            <Route\n              path=\"/skills\"\n              render={(props) => (\n                <SkillSummary\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n            <Route\n              path=\"/code\"\n              render={(props) => (\n                <CodingExperience\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}