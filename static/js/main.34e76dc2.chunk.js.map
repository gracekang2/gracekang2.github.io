{"version":3,"sources":["Components/SVGLink.js","Components/Landing.js","Components/HeaderLink.js","Components/Header.js","Components/AboutMe.js","Components/SkillSummary.js","Components/ProjectTile.js","Components/Projects.js","Components/EcoStore.js","Components/WorkExperience.js","Components/CodingExperience.js","App.js","serviceWorker.js","index.js"],"names":["SVGLink","href","this","props","Link","target","rel","className","style","width","height","display","viewBox","fill","d","Path","React","Component","Landing","id","src","alt","role","aria-label","HeaderLink","Href","Colour","Name","OnLinkClick","basename","onClick","to","value","Header","pages","name","state","updateDimensions","setState","prev","Collapsed","window","screen","SmallScreen","OnMenuIconClick","OnMenuCloseClick","OnSmallLinkClick","addEventListener","removeEventListener","map","page","key","AboutMe","LandingColour","BackgroundColour","SkillSummary","sleep","ms","Promise","resolve","setTimeout","languages","libraries","databases","python","javascript","cLanguages","cSharp","printLanguages","Command","Output","CommandText","then","Typing","Printing","printSkillSummary","onClickLanguages","onFinishedTyping","startTyping","onClickSkillSummary","onStartedTyping","color","ProjectTile","desc","OnTileClick","event","backgroundColor","textColor","border","borderColor","title","image","tech","t","badgeColor","description","Projects","Images","WorkExperience","Tile1Expanded","Tile2Expanded","CodingExperience","Color","BackgroundColor","App","HeadingColour","PictureURL","PageIndex","history","createBrowserHistory","ReactGA","initialize","set","listen","location","hash","pageview","ColourChange","exact","path","component","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34e76dc2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class SVGLink extends React.Component {\r\n  render() {\r\n    return (\r\n      <a\r\n        href={this.props.Link}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"svgLink\"\r\n      >\r\n        <svg\r\n          style={{ width: \"24px\", height: \"24px\", display: \"inline\" }}\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path fill=\"currentColour\" d={this.props.Path} />\r\n        </svg>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport SVGLink from \"./SVGLink\";\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"landingPage\">\r\n        <div id=\"landingWrapper\">\r\n          <div id=\"landingPhotoDiv\">\r\n            <img src=\"Images/landing_blush.png\" alt=\"\" id=\"landingPhoto\" />\r\n          </div>\r\n          <div id=\"landingTextDiv\">\r\n            <span>\r\n              <span className=\"landingText\">hello world!<span role=\"img\" aria-label=\"emoji\">✨</span></span>\r\n              <br />\r\n              <span className=\"landingText\">my name is Grace.</span>\r\n              <br />\r\n              <br />\r\n              <span className=\"landingText\">let's get to know eachother!</span>\r\n              <br />\r\n              <br />\r\n              <SVGLink\r\n                Link=\"https://www.github.com/gracekang2\"\r\n                Path=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\"\r\n              />\r\n              <SVGLink\r\n                Link=\"https://www.linkedin.com/in/g8kang\"\r\n                Path=\"M19 3A2 2 0 0 1 21 5V19A2 2 0 0 1 19 21H5A2 2 0 0 1 3 19V5A2 2 0 0 1 5 3H19M18.5 18.5V13.2A3.26 3.26 0 0 0 15.24 9.94C14.39 9.94 13.4 10.46 12.92 11.24V10.13H10.13V18.5H12.92V13.57C12.92 12.8 13.54 12.17 14.31 12.17A1.4 1.4 0 0 1 15.71 13.57V18.5H18.5M6.88 8.56A1.68 1.68 0 0 0 8.56 6.88C8.56 5.95 7.81 5.19 6.88 5.19A1.69 1.69 0 0 0 5.19 6.88C5.19 7.81 5.95 8.56 6.88 8.56M8.27 18.5V10.13H5.5V18.5H8.27Z\"\r\n              />\r\n              <SVGLink\r\n                Link=\"mailto:g8kang@uwaterloo.ca\"\r\n                Path=\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\"\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\n\r\nexport const HeaderLink = ({ Href, Colour, Name, OnLinkClick }) => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <div className=\"headerLink\" onClick={OnLinkClick}>\r\n        <Link to={Href}>\r\n          <span className={Colour} value={Href}>\r\n            {Name}\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HeaderLink } from \"./HeaderLink\";\r\n\r\nexport default class Header extends React.Component {\r\n  pages = [\r\n    {\r\n      name: \"home\",\r\n      href: \"/\",\r\n    },\r\n    {\r\n      name: \"about me\",\r\n      href: \"/about\",\r\n    },\r\n    {\r\n      name: \"skills\",\r\n      href: \"/skills\",\r\n    },\r\n    {\r\n      name: \"coding\",\r\n      href: \"/code\",\r\n    },\r\n  ];\r\n\r\n  state = {};\r\n\r\n  updateDimensions = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: window.screen.width <= 450,\r\n      SmallScreen: window.screen.width <= 450,\r\n    }));\r\n  };\r\n\r\n  OnMenuIconClick = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: false,\r\n    }));\r\n  };\r\n\r\n  OnMenuCloseClick = () => {\r\n    this.setState((prev) => ({\r\n      Collapsed: true,\r\n    }));\r\n  };\r\n\r\n  OnSmallLinkClick = (value) => {\r\n    this.OnMenuCloseClick();\r\n    this.props.OnLinkClick(value);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"header\">\r\n        <svg\r\n          id=\"menuIcon\"\r\n          style={{\r\n            width: \"24px\",\r\n            height: \"24px\",\r\n            display: this.state.Collapsed ? \"inline-block\" : \"none\",\r\n          }}\r\n          viewBox=\"0 0 24 24\"\r\n          onClick={this.OnMenuIconClick}\r\n        >\r\n          <path\r\n            fill=\"currentColor\"\r\n            d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\"\r\n          />\r\n        </svg>\r\n        <div\r\n          className=\"linkWrapper\"\r\n          style={{ display: !this.state.Collapsed ? \"inline-block\" : \"none\" }}\r\n        >\r\n          <svg\r\n            style={{\r\n              width: \"24px\",\r\n              height: \"24px\",\r\n              display:\r\n                this.state.SmallScreen && !this.state.Collapsed\r\n                  ? \"inline-block\"\r\n                  : \"none\",\r\n            }}\r\n            viewBox=\"0 0 24 24\"\r\n            id=\"menuClose\"\r\n            onClick={this.OnMenuCloseClick}\r\n          >\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"\r\n            />\r\n          </svg>\r\n          <br />\r\n          {this.pages.map((page) => {\r\n            return (\r\n              <HeaderLink\r\n                key={[page.href]}\r\n                Href={page.href}\r\n                Colour={this.props.Colour}\r\n                Name={page.name}\r\n                OnLinkClick={\r\n                  this.state.SmallScreen\r\n                    ? this.OnSmallLinkClick\r\n                    : this.props.OnLinkClick\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class AboutMe extends React.Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"aboutMe\">\r\n        <h1 className={this.props.LandingColour}>about me</h1>\r\n        <div id=\"aboutmepic-mobile-div\">\r\n          <img src=\"./AboutMeImages/15_square.jpg\" id=\"aboutmepic-mobile\"/>\r\n        </div>\r\n        <table>\r\n          <tr>\r\n            <td id=\"piccell\">\r\n              <img src=\"./AboutMeImages/15_square.jpg\" id=\"aboutmepic\"/>\r\n            </td>\r\n            <td>\r\n            <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n              Name:\r\n            </span>\r\n            <span className=\"aboutMeAns\">Grace Kang <span role=\"img\" aria-label=\"emoji\">🤠</span></span>\r\n            <br />\r\n            <br />\r\n            <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n              Program:\r\n            </span>\r\n            <span className=\"aboutMeAns\">\r\n              3A Computer Science, University of Waterloo <span role=\"img\" aria-label=\"emoji\">🦆</span>\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className={this.props.BackgroundColour + \" aboutMeCategory\"}>\r\n              Location:\r\n            </span>\r\n            <span className=\"aboutMeAns\">Toronto, Canada <span role=\"img\" aria-label=\"emoji\">🍁</span></span>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <div id=\"aboutMeDesc\">\r\n          <p>\r\n            I'm\r\n            <b className={this.props.LandingColour}> Grace </b>\r\n            , and I'm currently a third year{\" \"}\r\n            Computer Science student\r\n            at the{\" \"}\r\n            University of Waterloo. Welcome to my website <span role=\"img\" aria-label=\"emoji\">😺</span>!\r\n            <br />\r\n            <br/>\r\n            I have interned at <span className={this.props.LandingColour}>Wish</span> and <span className={this.props.LandingColour}>Scotiabank</span> in the past, \r\n            and will be heading back to Wish as a SWE intern in Winter 2021 to continue sharpening my skills.\r\n            I am still exploring different fields of computer science, but in general, I am interested in opportunities that are both educationally challenging and exciting!\r\n            <br/>\r\n            <b>\r\n              I am currently looking for an internship opportunity for{\" \"}\r\n              <b>\r\n                <span className={this.props.LandingColour}> Summer 2021</span>\r\n              </b>\r\n              , so I would love to chat :)\r\n            </b>\r\n            <br />\r\n            <br/>\r\n            Speaking in terms of my technical interests, I am mostly\r\n            interested in backend development, though I have experience on the full-stack. For more\r\n            information about my skillset or past technical experiences, you can\r\n            head over to my skills summary or my coding experience section. Other than math and computer science, \r\n            I love to take electives in subjects like English and psychology. One of my favorite courses that I've \r\n            taken in university is an English course on modernist literature! \r\n            <br />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Typing from \"react-typing-animation\";\r\n\r\nexport default class SkillSummary extends React.Component {\r\n  sleep = (ms) => {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  };\r\n\r\n  languages = (\r\n    <span>\r\n      <span className=\"greenTxt\">languages: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['python', 'JavaScript', 'C', 'C++', 'C#']\r\n      </span>\r\n    </span>\r\n  );\r\n  libraries = (\r\n    <span>\r\n      <span className=\"greenTxt\">frameworks + libraries: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['reactJS', 'node.js', 'jQuery', 'ASP.NET']\r\n      </span>\r\n      <br />\r\n    </span>\r\n  );\r\n  databases = (\r\n    <span>\r\n      <span className=\"greenTxt\">databases: </span>\r\n      <span className=\"terminalWhite\">\r\n        ['mongoDB', 'Microsoft SQL Management Server']\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  python = (\r\n    <span>\r\n      <span className=\"yellowTxt\">python: </span>\r\n      <span>\r\n        used Python while interning at Wish, as a SWE intern on the Product\r\n        Payments team. Worked on various backend tasks using Python, including\r\n        work on Wish's customer support chatbot, writing scripts / crons, and\r\n        integrating features of Stripe's payment API.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  javascript = (\r\n    <span>\r\n      <span className=\"yellowTxt\">JavaScript : </span>\r\n      <span>\r\n        experience using JavaScript for both frontend and backend tasks - used{\" \"}\r\n        <span className=\"greenTxt\">jQuery</span> during co-op as a full-stack\r\n        developer at Scotiabank, and used{\" \"}\r\n        <span className=\"greenTxt\">React.js </span>\r\n        while interning at Wish. I also used{\" \"}\r\n        <span className=\"greenTxt\">Express/Node.js</span> to build an API for a\r\n        hackathon project called EcoStore.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  cLanguages = (\r\n    <span>\r\n      <span className=\"yellowTxt\">C and C++: </span>\r\n      <span>\r\n        learned both C and C++ in courses at university. Studied C and related\r\n        topics in <span className=\"neonGreen\">CS136 (93%)</span> and C++ in{\" \"}\r\n        <span className=\"neonGreen\">CS246 (95%)</span>. In CS246, the final\r\n        project was a Tetris replica game called BiQuadris that was completed\r\n        with 2 other group members, which received a grade of 98%.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  cSharp = (\r\n    <span>\r\n      <span className=\"yellowTxt\">C#: </span>\r\n      <span>\r\n        gained experience in C# while interning at ScotiaBank as a full-stack\r\n        web developer, and used it to create various web forms and razor pages,\r\n        alongside Microsoft's ASP.NET framework.\r\n      </span>\r\n    </span>\r\n  );\r\n\r\n  printLanguages = () => {\r\n    this.setState((prev) => ({\r\n      Command: null,\r\n      Output: prev.Output ? (\r\n        <span>\r\n          {prev.Output}\r\n          <br />\r\n          {prev.CommandText}\r\n        </span>\r\n      ) : (\r\n        <span>{prev.CommandText}</span>\r\n      ),\r\n    }));\r\n    this.sleep(1000).then(() => {\r\n      this.setState((prev) => ({\r\n        Output: (\r\n          <span>\r\n            {prev.Output}\r\n            <br />\r\n            {this.python}\r\n          </span>\r\n        ),\r\n        Typing: false,\r\n      }));\r\n      this.sleep(1000).then(() => {\r\n        this.setState((prev) => ({\r\n          Output: (\r\n            <span>\r\n              {prev.Output}\r\n              <br />\r\n              {this.javascript}\r\n            </span>\r\n          ),\r\n        }));\r\n        this.sleep(1000).then(() => {\r\n          this.setState((prev) => ({\r\n            Output: (\r\n              <span>\r\n                {prev.Output}\r\n                <br />\r\n                {this.cLanguages}\r\n              </span>\r\n            ),\r\n          }));\r\n          this.sleep(1000).then(() => {\r\n            this.setState((prev) => ({\r\n              Output: (\r\n                <span>\r\n                  {prev.Output}\r\n                  <br />\r\n                  {this.cSharp}\r\n                  <br />\r\n                  ---------------------------\r\n                </span>\r\n              ),\r\n              Printing: false,\r\n            }));\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  printSkillSummary = () => {\r\n    this.setState((prev) => ({\r\n      Command: null,\r\n      Output: prev.Output ? (\r\n        <span>\r\n          {prev.Output}\r\n          <br />\r\n          {prev.CommandText}\r\n        </span>\r\n      ) : (\r\n        <span>{prev.CommandText}</span>\r\n      ),\r\n    }));\r\n    this.sleep(1000).then(() => {\r\n      this.setState((prev) => ({\r\n        Output: prev.Output ? (\r\n          <span>\r\n            {prev.Output}\r\n            <br />\r\n            {this.languages}\r\n          </span>\r\n        ) : (\r\n          <span>{this.languages}</span>\r\n        ),\r\n        Typing: false,\r\n      }));\r\n      this.sleep(1000).then(() => {\r\n        this.setState((prev) => ({\r\n          Output: (\r\n            <span>\r\n              {prev.Output}\r\n              <br />\r\n              {this.libraries}\r\n            </span>\r\n          ),\r\n        }));\r\n        this.sleep(1000).then(() => {\r\n          this.setState((prev) => ({\r\n            Output: (\r\n              <span>\r\n                {prev.Output}\r\n                {this.databases}\r\n                <br />\r\n                ----------------------------\r\n              </span>\r\n            ),\r\n            Printing: false,\r\n          }));\r\n          this.onClickLanguages();\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  state = {\r\n    Printing: true,\r\n    Typing: true,\r\n    Command: (\r\n      <Typing className=\"command\" onFinishedTyping={this.printSkillSummary}>\r\n        {\" \"}\r\n        python skill_summary.py{\" \"}\r\n      </Typing>\r\n    ),\r\n    Output: null,\r\n    CommandText: \"python skill_summary.py\",\r\n  };\r\n\r\n  startTyping = () => {\r\n    this.setState((prev) => ({\r\n      Typing: true,\r\n    }));\r\n  };\r\n\r\n  onClickSkillSummary = () => {\r\n    this.setState((prev) => ({\r\n      Command: (\r\n        <Typing\r\n          className=\"command\"\r\n          onStartedTyping={this.startTyping}\r\n          onFinishedTyping={this.printSkillSummary}\r\n        >\r\n          {\" \"}\r\n          python skill_summary.py{\" \"}\r\n        </Typing>\r\n      ),\r\n      CommandText: \"python skill_summary.py\",\r\n      Printing: true,\r\n    }));\r\n  };\r\n\r\n  onClickLanguages = () => {\r\n    this.setState((prev) => ({\r\n      Command: (\r\n        <Typing\r\n          className=\"command\"\r\n          onStartedTyping={this.startTyping}\r\n          onFinishedTyping={this.printLanguages}\r\n        >\r\n          {\" \"}\r\n          python languages.py{\" \"}\r\n        </Typing>\r\n      ),\r\n      CommandText: \"python languages.py\",\r\n      Printing: true,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"skillSummary\">\r\n        <h1 className={this.props.LandingColour}>skills summary</h1>\r\n        <h4>\r\n          <span className={this.props.LandingColour}>\r\n            Don't have a lot of time?\r\n          </span>{\" \"}\r\n          Click{\" \"}\r\n          <a\r\n            href=\"https://drive.google.com/file/d/1K4l_MydekAvCdULXKgtMx6hXh2yEM8F5/view?usp=sharing\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"#551A8B\" }}\r\n          >\r\n            here\r\n          </a>{\" \"}\r\n          to see my resume.\r\n        </h4>\r\n        <p>\r\n          For more detailed info, check out my coding experience section.\r\n        </p>\r\n        <div id=\"terminal\">\r\n          <div id=\"terminalHeader\">\r\n            <div id=\"redBtn\" className=\"terminalBtn\"></div>\r\n            <div id=\"yellowBtn\" className=\"terminalBtn\"></div>\r\n            <div id=\"greenBtn\" className=\"terminalBtn\"></div>\r\n          </div>\r\n          <div id=\"terminalText\">\r\n            <div id=\"loginText\">\r\n              <span className=\"terminalWhite\">\r\n                Last login: Sat Feb 22 23:43:02 on console\r\n              </span>\r\n            </div>\r\n            <div id=\"outputtedText\" className=\"terminalWhite\">\r\n              {this.state.Output}\r\n            </div>\r\n            <div id=\"commandText\">\r\n              <span className=\"terminalWhite\">\r\n                <span className=\"neonGreen\">gkang-mac: </span>\r\n                <span className=\"neonPink\">~desktop$ </span>\r\n                {this.state.Command}\r\n              </span>\r\n              {!this.state.Typing ? (\r\n                <span id=\"cursor\">&nbsp;&nbsp;</span>\r\n              ) : (\r\n                <span></span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ProjectTile extends React.Component {\r\n    state = {\r\n        desc: false\r\n    };\r\n\r\n    OnTileClick = (event) => {\r\n        this.setState((prev) => ({\r\n            desc: !prev.desc\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"projectTile\" style={{backgroundColor: this.props.color, color: this.props.textColor , border: \"1px solid \" + this.props.borderColor}} onClick={this.OnTileClick}>\r\n            <div className=\"projectDescriptionBlock\">\r\n                <h3>{this.props.title}</h3>\r\n                {this.props.image && !this.state.desc ? <img src={this.props.image} className=\"projectTileImg\"/> : <></>}\r\n                {this.props.tech.map(t => {\r\n                    return <span className=\"techBadge\" style={{backgroundColor: this.props.badgeColor}}>{t}</span>\r\n                })}<br/>\r\n                {this.state.desc || !this.props.image ? this.props.description : <></>}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ProjectTile from \"./ProjectTile\";\r\n\r\nexport default class Projects extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"projectsRow\">\r\n            <ProjectTile color=\"#46aea3\" badgeColor=\"#75e5e6\" title=\"EcoStore\" tech={[\"Node.js\", \"Express.js\", \"MongoDB\", \"Microsoft Azure\"]} description={\r\n              <>\r\n                  An iOS app, created at HackTheNorth in September 2019, that uses image recognition to gamify the art of proper recycling. By continuing \r\n                  to properly recycle, users can restore their virtual ecosystems.<br/>\r\n            </>\r\n          } image=\"./Images/ecostore.jpg\"\r\n          />\r\n            <ProjectTile color=\"#bebccb\" badgeColor=\"#8d89a3\" title=\"Live ASL Alphabet Translator\" tech={[\"Python\", \"fastai + PyTorch\", \"OpenCV\"]} description={\r\n                <>\r\n                  A command line program that takes in live video feed from a user's webcam, and recognizes + translates static ASL alphabet signs. This program \r\n                  is built on a deep learning model, trained using a homemade dataset, which achieved 97% accuracy in training. <br/>\r\n                </>\r\n            } image=\"./Images/asl.gif\"\r\n            />\r\n            <ProjectTile color=\"#ffffff\" badgeColor=\"#ffb5bf\" textColor=\"black\" borderColor=\"black\" title=\"BiQuadris\" tech={[\"C++\", \"OOP\"]} description={\r\n                <>\r\n                  A command line version of Tetris, made in C++. This game was a school project completed with 2 other members, and utilized a variety of OOP design patterns. \r\n                  Achieved a final grade of 98%.<br />\r\n                </>\r\n            } image=\"./Images/biquadris.jpeg\"\r\n            />\r\n        </div>\r\n        <div className=\"projectsRow\">\r\n            <ProjectTile color=\"#a6e0de\" badgeColor=\"#3ebdc6\" title=\"MyBCP\" tech={[\"C#\", \"SQL\", \"ASP.NET\", \"jQuery\"]} description={\r\n              <>\r\n                  A web tool that displays a customized and easily digestible summary of an\r\n                  employee's Business Continuity Plan, including emergency contact information and alternative office info. \r\n                  It is estimated that upwards of <b> 2000 Toronto employees</b> will be using this tool.<br/>\r\n                  <i>(Made for Scotiabank.)</i><br/>\r\n            </>\r\n          }/>\r\n            <ProjectTile color=\"#8d89a3\" badgeColor=\"#bebccb\" title=\"Bulk Fund Import\" tech={[\"C#\", \"SQL\", \"ASP.NET\", \"jQuery\"]} description={\r\n                <>\r\n                  A tool to automate tedious manual\r\n                  fund tracking. Designed to process multiple spreadsheets with over 120 000+ rows of fund data, and make the\r\n                  necessary updates to the bank's database. Built \r\n                  to be incredibly user friendly, with a drag and drop file upload\r\n                  mechanism, and a calendar displaying a summary of the updates and inserts made\r\n                  on each day.<br/>\r\n                  <i>(Made for Scotiabank.)</i><br/>\r\n                </>\r\n            }\r\n            />\r\n            <ProjectTile color=\"#cbe3b3\" badgeColor=\"#b7df69\" title=\"UserMatrix\" tech={[\"C#\", \"SQL\", \"ASP.NET\", \"jQuery\"]} description={\r\n                <>\r\n                  A <b>JavaScript library</b> for internal tool development within Scotiabank.r\r\n                  A library for generating highly customizable,{\" \"}\r\n                  <b>2-dimensional</b> batch edit modals to edit bank Users against another\r\n                  dimension (e.g. applications). The modal was designed to be highly customizable for the\r\n                  types of users, the dimension against which users would be edited,\r\n                  adding capabilities, etc. <br />\r\n                  <i>(Made for Scotiabank.)</i><br/>\r\n                </>\r\n            }/>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\nconst Images = [\r\n  \"./Images/IMG_0248-min.PNG\",\r\n  \"./Images/IMG_0249-min.PNG\",\r\n  \"./Images/IMG_0254-min.PNG\",\r\n  \"./Images/IMG_0255-min.PNG\",\r\n  \"./Images/IMG_0256-min.PNG\",\r\n  \"./Images/IMG_0257-min.PNG\",\r\n  \"./Images/IMG_0259-min.PNG\",\r\n  \"./Images/IMG_0260-min.PNG\",\r\n  \"./Images/IMG_0258-min.PNG\",\r\n];\r\n\r\nexport default class EcoStore extends React.Component {\r\n  state = {\r\n    Image: Images[0],\r\n  };\r\n\r\n  ToggleLeft = () => {\r\n    var newIndex = Images.indexOf(this.state.Image);\r\n    newIndex -= 1;\r\n\r\n    if (newIndex < 0) {\r\n      newIndex = Images.length - 1;\r\n    }\r\n\r\n    this.setState((prev) => ({\r\n      Image: Images[newIndex],\r\n    }));\r\n  };\r\n\r\n  ToggleRight = () => {\r\n    var newIndex = Images.indexOf(this.state.Image);\r\n    newIndex += 1;\r\n\r\n    if (newIndex >= Images.length) {\r\n      newIndex = 0;\r\n    }\r\n\r\n    this.setState((prev) => ({\r\n      Image: Images[newIndex],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table id=\"ecostore\">\r\n          <tbody>\r\n            <tr>\r\n              <td\r\n                colSpan={3}\r\n                style={{ paddingBottom: \"20px\", fontSize: \"16px\" }}\r\n              >\r\n                <i>Swift, Node.js + Express.js, MongoDB, Microsoft Azure</i>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td onClick={this.ToggleLeft} className=\"ecostoreArrow\">\r\n                <svg\r\n                  style={{ width: \"24px\", height: \"24px\" }}\r\n                  viewBox=\"0 0 24 24\"\r\n                  className=\"leftbtn\"\r\n                >\r\n                  <path\r\n                    fill=\"#000000\"\r\n                    d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                  />\r\n                </svg>\r\n              </td>\r\n              <td id=\"ecostoreimg\">\r\n                <img src={this.state.Image} alt=\"Screenshot of ecostore app\" />\r\n              </td>\r\n              <td onClick={this.ToggleRight} className=\"ecostoreArrow\">\r\n                <svg\r\n                  style={{ width: \"24px\", height: \"24px\" }}\r\n                  viewBox=\"0 0 24 24\"\r\n                  className=\"rightbtn\"\r\n                >\r\n                  <path\r\n                    fill=\"#000000\"\r\n                    d=\"M4,11V13H16L10.5,18.5L11.92,19.92L19.84,12L11.92,4.08L10.5,5.5L16,11H4Z\"\r\n                  />\r\n                </svg>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"ecostoredesc\" colSpan={3}>\r\n                <br />\r\n                EcoStore is an adorable iOS application that was created at Hack\r\n                the North in September 2019.\r\n                <br />\r\n                This application is based off the very real issue of{\" \"}\r\n                <i>recycling contamination</i>, where one piece of trash in a\r\n                huge batch of recycling is enough to send all of the recycling\r\n                to the landfill! <br />\r\n                EcoStore works to encourage users to recycle properly, rather\r\n                than recklessly. The app uses an image recognition model,\r\n                trained using <b>Microsoft Azure</b>, with a 95% accuracy rate,\r\n                and allows a user to point their camera at an object and\r\n                determine whether it's recyclable. <br />\r\n                More so, users can track their recycling and are awarded points\r\n                each time they recycle! When a certain point quota is met, users\r\n                can \"restore\" endangered species within the app to reward them\r\n                for their job well done.\r\n                <br />\r\n                Personally, I mainly worked on the backend of this project and\r\n                built out the API using <b>Express/Node.js</b>.\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class WorkExperience extends React.Component {\r\n  OnTileClick = (event) => {\r\n    if (\r\n      event.target.id === \"workTile1\" ||\r\n      event.target.className === \"workTile1\"\r\n    ) {\r\n      this.setState((prev) => ({\r\n        Tile1Expanded: !prev.Tile1Expanded,\r\n        Tile2Expanded: false,\r\n      }));\r\n    } else if (\r\n      event.target.id === \"workTile2\" ||\r\n      event.target.className === \"workTile2\"\r\n    ) {\r\n      this.setState((prev) => ({\r\n        Tile2Expanded: !prev.Tile2Expanded,\r\n        Tile1Expanded: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  state = {\r\n    Tile1Expanded: false,\r\n    Tile2Expanded: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"workTilesWrapper\">\r\n        <div\r\n          id=\"workTile1\"\r\n          className={this.state.Tile1Expanded ? \"expanded\" : \"\"}\r\n          onClick={this.OnTileClick}\r\n        >\r\n          <span className=\"workTitle workTile1\">Wish</span>\r\n          <br />\r\n          <span className=\"workCaption workTile1\">\r\n            Software Engineering Intern\r\n          </span>\r\n          {this.state.Tile1Expanded ? (\r\n            <>\r\n              <br className=\"workTile1\" />\r\n              <i className=\"workTile1\">\r\n                Winter 2020 - San Francisco, California\r\n              </i>\r\n              <p className=\"workTile1\">\r\n                I had an amazing time working as a full-stack software engineering intern on the Product Payments team\r\n                at Wish! I primarily coded in Python and React.js. I had the opportunity to work on a\r\n                variety of cool payment and risk related tasks, some\r\n                examples including:\r\n              </p>\r\n              <ul className=\"workTile1\">\r\n                <li className=\"workTile1\">\r\n                Implementing a new CVV recollection payments flow by integrating with Stripe’s API, \r\n                successfully decreasing the number of fraud purchases made through hacked accounts.\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Engineering a new risk decision pipeline to allow high value users to continue shopping \r\n                  after a chargeback event, increasing gross merchandise value and user retention.\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Piloting the creation of a new combined shipment details page to provide detailed last mile \r\n                  tracking information, which is currently being used by 1800+ users per hour.\r\n                </li>\r\n                <li className=\"workTile1\">\r\n                  Improving charge data accuracy by building out a webhook and new chargeback pipeline for PrimeiroPay.\r\n                </li>\r\n              </ul>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        <div\r\n          id=\"workTile2\"\r\n          className={this.state.Tile2Expanded ? \"expanded\" : \"\"}\r\n          onClick={this.OnTileClick}\r\n        >\r\n          <span className=\"workTitle workTile2\">Scotiabank</span>\r\n          <br />\r\n          <span className=\"workCaption workTile2\">\r\n            Full Stack Web Developer\r\n          </span>\r\n          {this.state.Tile2Expanded ? (\r\n            <>\r\n              <br className=\"workTile2\" />\r\n              <i className=\"workTile2\">Summer 2019 - Toronto, Canada</i>\r\n              <p className=\"workTile2\">\r\n                I worked as a full-stack web developer on the GBM Web team, and\r\n                created various web services for the trade floor. I used a\r\n                Microsoft stack - ASP.NET, C#, SQL, and jQuery, and took full\r\n                ownership over the development of multiple internal tools.<br/>\r\n                It was a really beneficial learning experience for me, as my first co-op, as I \r\n                got the opportunity to work on the full stack and gain a solid understanding of both \r\n                backend and frontend development.\r\n                <br />\r\n                <br/>\r\n                For more details about some of projects, please see the \r\n                Projects section below!\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Projects from './Projects'\r\n// import WebSites from \"./WebSites\";\r\n// import Games from \"./Games\";\r\nimport EcoStore from \"./EcoStore\";\r\nimport WorkExperience from \"./WorkExperience\";\r\n\r\nexport default class CodingExperience extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"codingExperience\">\r\n        <h1 className={this.props.LandingColour}>coding experience</h1>\r\n        <h2 className={this.props.LandingColour}>work experience</h2>\r\n        <WorkExperience\r\n          Color={this.props.LandingColour}\r\n          BackgroundColor={this.props.BackgroundColor}\r\n        />\r\n        <h2 className={this.props.LandingColour}>projects</h2>\r\n        {/* <WebSites /> */}\r\n        <Projects/>\r\n\r\n        {/* <h2 className={this.props.LandingColour}>eco-store</h2> */}\r\n        {/* <EcoStore /> */}\r\n        {/* <h2 className={this.props.LandingColour}>coin run</h2>\r\n        <Games /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./Styles/App.css\";\nimport \"./Styles/Landing.css\";\nimport \"./Styles/AboutMe.css\";\nimport \"./Styles/Skills.css\";\nimport \"./Styles/Header.css\";\nimport \"./Styles/Coding.css\";\nimport Landing from \"./Components/Landing.js\";\nimport Header from \"./Components/Header\";\nimport AboutMe from \"./Components/AboutMe\";\nimport SkillSummary from \"./Components/SkillSummary\";\nimport CodingExperience from \"./Components/CodingExperience\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ReactGA from \"react-ga\";\n\nexport default class App extends React.Component {\n  state = {\n    HeadingColour: \"headingColour1\",\n    BackgroundColour: \"backgroundColour1\",\n    PictureURL: \"Images/bitmoji_transparent_1.png\",\n    PageIndex: \"1\",\n  };\n\n  history = createBrowserHistory();\n\n  componentDidMount() {\n    ReactGA.initialize(\"UA-148594222-1\");\n    ReactGA.set({});\n    this.history.listen((location) => {\n      ReactGA.set({ page: location.hash });\n      ReactGA.pageview(location.hash);\n    });\n  }\n\n  OnLinkClick() {}\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header\n          ColourChange={this.ColourChange}\n          BackgroundColour={this.state.BackgroundColour}\n          Colour={this.state.HeadingColour}\n          OnLinkClick={this.OnLinkClick}\n        ></Header>\n        <div className=\"content\">\n          <HashRouter basename=\"/\" history={this.history}>\n            <Route exact path=\"/\" component={Landing} />\n            <Route\n              path=\"/about\"\n              render={(props) => (\n                <AboutMe\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n            <Route\n              path=\"/skills\"\n              render={(props) => (\n                <SkillSummary\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n            <Route\n              path=\"/code\"\n              render={(props) => (\n                <CodingExperience\n                  {...props}\n                  LandingColour={this.state.HeadingColour}\n                  BackgroundColour={this.state.BackgroundColour}\n                />\n              )}\n            />\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}